{"name":"TTVDB","tagline":"ruby TheTVDB API library - yes, another.","body":"[![Build Status](https://travis-ci.org/lotherk/ttvdb.png?branch=master)](https://travis-ci.org/lotherk/ttvdb)\r\n\r\n# TTVDB\r\n\r\nThis is another [TheTVDB.com](http://www.thetvdb.com) API library. The others out there didn't fit my needs (if they even worked).\r\n\r\nSource code is available at [github](https://github.com/lotherk/ttvdb)\r\n\r\nDocumentation is available at [rubydoc.info](http://rubydoc.info/github/lotherk/ttvdb)\r\n\r\nGem is available at [rubygems.org](https://rubygems.org/gems/ttvdb)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'ttvdb'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install ttvdb\r\n\r\nFrom source:\r\n\r\n    $ git clone https://github.com/lotherk/ttvdb\r\n    $ cd ttvdb\r\n    $ rake build\r\n    $ gem install pkg/ttvdb-VERSION.gem\r\n\r\n## Usage\r\n\r\n### Using the CLI tools\r\n\r\n#### Synopsis\r\n```\r\nttvdb 0.0.4 (c) 2014 Konrad Lother\r\n\r\nusage: ttvdb [global options] <subcommand> [subcommand options]\r\n\r\nAvailable subcommands:\r\n  search           - search a serie\r\n\r\nGlobal options:\r\n  --language, -l <s>:   Language (default: en)\r\n         --debug, -d:   Enable debug messages\r\n       --version, -v:   Print version and exit\r\n          --help, -h:   Show this message\r\n```\r\n\r\n#### search\r\n\r\nThe ```search``` subcommand lets you search for a particular series.\r\n\r\n```\r\nSearch for a series\r\n\r\nusage: ttvdb [options] search [options] name1 name2 name3 ...\r\n\r\nnameN can either be id or name\r\n\r\nExample:\r\n\r\n  $ ttvdb search \"Galaxy Rangers\"\r\n\r\n  $ ttvdb search 77772\r\n\r\n  $ ttvdb search \"Galaxy Rangers\" -d\r\n\r\n  $ ttvdb search \"Galaxy Rangers\" -d -l 10\r\n\r\n  $ ttvdb search 77772 -e heartbeat\r\n\r\n  $ ttvdb search 77772 -e s01e65\r\n\r\n  $ ttvdb search 77772 -e e65\r\n\r\n  $ ttvdb search 77772 -e 65\r\n\r\nOptions:\r\n     --detailed, -d:   show detailed informations for a series\r\n    --limit, -l <i>:   limit result if --detailed is used (default: 0)\r\n  --episode, -e <s>:   show detailed informations for an episode. can be name,\r\n                       name or id\r\n         --help, -h:   Show this message\r\n```\r\n\r\n### Writing Code\r\n\r\nRequire the gem\r\n\r\n```ruby\r\nrequire 'ttvdb'\r\n```\r\n\r\nCreate a ```TTVDB::Client``` instance\r\n\r\n```ruby\r\nclient = TTVDB::Client.new(options={})\r\n```\r\n\r\nWhere ```options``` can be:\r\n\r\n| key | value | description\r\n| --- | :---: | --- |\r\n| ```:api_key``` | api key | Your TheTVDB API Key, *optional* |\r\n| ```:api_url``` | http://www.thetvdb.com/api/ | API Url, *optional* |\r\n| ```:language```|```en```,```de```,```fr```,... | The language code to use. Fallback is ```en```, *optional* |\r\n\r\n# Example\r\n\r\nThis is an example script that fetches a series by ARGV. if ARGV is an integer, it will fetch it by its id otherwise by its name. It will then print a little overview about the series.\r\n\r\n## Usage\r\n```bash\r\n$ ruby ttvdb_example.rb \"Galaxy Rangers\"\r\n# or\r\n$ ruby ttvdb_example.rb 77772\r\n```\r\n\r\n## Code\r\n```ruby\r\n#!/usr/bin/env ruby\r\nrequire \"ttvdb\"\r\n\r\nTTVDB.logger.level = Logger::WARN\r\n\r\nclient = TTVDB::Client.new\r\nseries = nil\r\n\r\nif ARGV[0].to_i > 0\r\n  series = [client.get_series_by_id(ARGV[0].to_i)]\r\nelse\r\n  series = client.get_series ARGV[0]\r\nend\r\n\r\nseries.each do |serie|\r\n  puts serie.name\r\n  puts \"Overview:\"\r\n  puts serie.overview\r\n\r\n  puts \"\"\r\n  serie.seasons.each do |season, episodes|\r\n    puts \"Season: %02d\" % season\r\n    episodes.each do |number, episode|\r\n      puts \"  #%02d - %s\" % [number, episode.name]\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n\r\nSee the ```examples/``` folder for a complete list of examples. I try to make them as easy to understand as possible.\r\n\r\n\r\n## Contributing\r\n\r\n1. Fork it ( http://github.com/lotherk/ttvdb/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}